<!doctype html>
<html>
  <head>
    <title>Google Maps Example</title>
    <script src="https://cdn.pubnub.com/sdk/javascript/pubnub.4.19.0.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" />
  </head>
  <body>
    <div class="container">
      <h1>Share Ride</h1>
      <div id="map-canvas" style="width:1024px;height:768px"></div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      var socket = io('http://localhost:3000');
      window.lat = 22.3964;
      window.lng = 114.1095;
  
      var urlParams = new URLSearchParams(window.location.search);
      var usr = urlParams.get('name') || 'anon';
  
      var map;
      var trafficLayer;
      var directionsService;
      var directionRenderer;

      var mark;
      var lineCoords = [];
        
      var initialize = function() {
        map  = new google.maps.Map(document.getElementById('map-canvas'), {center:{lat:lat,lng:lng},zoom:12});
        trafficLayer = new google.maps.TrafficLayer();
        trafficLayer.setMap(map);
        directionsService = new google.maps.DirectionsService();
        directionsRenderer = new google.maps.DirectionsRenderer();
        directionsRenderer.setMap(map)
        // mark = new google.maps.Marker({position:{lat:lat, lng:lng}, map:map});
      };
  
      window.initialize = initialize;
  
      const calculateAndDisplayRoute = function(directionsService, directionsRenderer) {
        directionsService.route(
            {
              origin: {query: document.getElementById('start').value},
              destination: {query: document.getElementById('end').value},
              travelMode: 'DRIVING'
            },
            function(response, status) {
              if (status === 'OK') {
                directionsRenderer.setDirections(response);
              } else {
                window.alert('Directions request failed due to ' + status);
              }
            });
      }
      var redraw = function(payload) {
        lat = payload.message.lat;
        lng = payload.message.lng;
  
        map.setCenter({lat:lat, lng:lng, alt:0});
        mark.setPosition({lat:lat, lng:lng, alt:0});
        
        lineCoords.push(new google.maps.LatLng(lat, lng));
  
        var lineCoordinatesPath = new google.maps.Polyline({
          path: lineCoords,
          geodesic: true,
          strokeColor: '#2E10FF'
        });
        
        lineCoordinatesPath.setMap(map);
      };

      var wayPoints = []
  
      // Adds a marker to the map.
      function addMarker(location, map) {
	wayPoints.push({location: location, stopover: true})

        // Add the marker at the clicked location, and add the next-available label
        // from the array of alphabetical characters.
        var marker = new google.maps.Marker({
          position: location,
          //label: labels[labelIndex++ % labels.length],
          map: map
        });
      }
  
        const sendMyCoords = (eventName) => { 
          navigator.geolocation.getCurrentPosition(pos => {
  	  socket.emit(eventName, {my: {lat: pos.coords.latitude, lng: pos.coords.longitude, usr: usr}})
          })
        }
  
      sendMyCoords('origin')
  
      setInterval(function() {
        sendMyCoords('coords')
      }, 5000);

      socket.on('passenger', function(data) {
	wayPoints = []
        console.log('passenger' + JSON.stringify(data))
	data.map(i => addMarker({lat: i.lat, lng: i.lng}, map))
	directionsService.route({
	  origin: data[0],
	  destination: data[data.length-1],
	  waypoints: wayPoints,
	  travelMode: 'DRIVING',
	}, (res, status) => {
	  directionsRenderer.setDirections(res)
	})
      })
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyDsiWvX1_7Rizgsvw2DMaLx0P7Bw0D47dg&callback=initialize"></script>

  </body>
</html>
